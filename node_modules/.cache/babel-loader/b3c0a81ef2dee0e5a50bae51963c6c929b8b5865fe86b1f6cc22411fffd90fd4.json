{"ast":null,"code":"var _jsxFileName = \"/Users/urnaa/Desktop/diplom/src/pages/signup/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport \"./SignUp.css\";\nimport Header from \"../../components/navbar/Header\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authentication } from \"../../firebase/firebase\";\nimport { GoogleAuthProvider, signInWithPopup, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const provider = new GoogleAuthProvider();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [status, setStatus] = useState(false);\n  const signWithGoogle = () => {\n    signInWithPopup(authentication, provider).then(response => {\n      console.log(\"response---->\", response);\n      alert(\"Google-r amjilttai bvrtgelee\");\n    }).catch(error => {\n      console.log(\"error --<\", error);\n    });\n  };\n  const history = useNavigate();\n  const handleUsername = e => {\n    setUsername(e.target.value);\n  };\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n  const handleConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n  const handleSignUp = async () => {\n    const res = await axios.post(\"http://localhost:3005/signup\", {\n      username,\n      password\n    });\n    const data = await res.data;\n    if (data.type == \"success\") {\n      setStatus(\"success\");\n      history(\"/signin\");\n    } else {\n      setStatus(\"Failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            className: \"input-text\",\n            label: \"FullName\",\n            name: \"fullName\",\n            rules: [{\n              required: true,\n              message: \"*Please input your username!\"\n            }, {\n              whitespace: true\n            }, {\n              min: 3\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            className: \"input-text\",\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"*Please input your username!\"\n            }, {\n              whitespace: true\n            }, {\n              min: 3\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              className: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            className: \"input-text\",\n            label: \"password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              className: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            className: \"input-text\",\n            label: \"Confirm-password\",\n            name: \"confirm-password\",\n            dependencies: [\"password\"],\n            rules: [{\n              required: true,\n              message: \"Please input your password!\"\n            }, _ref => {\n              let {\n                getFieldValue\n              } = _ref;\n              return {\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  } else {\n                    return Promise.reject(\"does not match\");\n                  }\n                }\n              };\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              className: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-container\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                offset: 8,\n                span: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn\",\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: signWithGoogle,\n                className: \"google\",\n                children: \"Google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"ctHWsbDKy1X4XBd8rrde32DDMfc=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Header","React","useState","axios","useNavigate","authentication","GoogleAuthProvider","signInWithPopup","createUserWithEmailAndPassword","SignUp","provider","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","status","setStatus","signWithGoogle","then","response","console","log","alert","catch","error","history","handleUsername","e","target","value","handleEmail","handlePassword","handleConfirmPassword","handleSignUp","res","post","data","type","span","remember","onFinish","onFinishFailed","required","message","whitespace","min","getFieldValue","validator","_","Promise","resolve","reject","offset"],"sources":["/Users/urnaa/Desktop/diplom/src/pages/signup/SignUp.jsx"],"sourcesContent":["import \"./SignUp.css\";\r\nimport Header from \"../../components/navbar/Header\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { authentication } from \"../../firebase/firebase\";\r\nimport {\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  createUserWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nfunction SignUp() {\r\n  const provider = new GoogleAuthProvider();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const signWithGoogle = () => {\r\n    signInWithPopup(authentication, provider)\r\n      .then((response) => {\r\n        console.log(\"response---->\", response);\r\n        alert(\"Google-r amjilttai bvrtgelee\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error --<\", error);\r\n      });\r\n  };\r\n\r\n  const history = useNavigate();\r\n\r\n  const handleUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPassword = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    const res = await axios.post(\"http://localhost:3005/signup\", {\r\n      username,\r\n      password,\r\n    });\r\n\r\n    const data = await res.data;\r\n\r\n    if (data.type == \"success\") {\r\n      setStatus(\"success\");\r\n      history(\"/signin\");\r\n    } else {\r\n      setStatus(\"Failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      {/* <div className=\"container2\">\r\n        <div className=\"container\">\r\n          <div className=\"signups\">Бүртгүүлэх</div>\r\n          <div className=\"info\">\r\n            <div className=\"infos\">\r\n              <div className=\"infotxt\">Нэвтрэх нэр</div>\r\n              <input type=\"text\" onChange={handleUsername} />\r\n            </div>\r\n            <div className=\"infos\">\r\n              <div className=\"infotxt\">Цахим шуудан</div>\r\n              <input type=\"text\" onChange={handleEmail} />\r\n            </div>\r\n            <div className=\"infos\">\r\n              <div className=\"infotxt\">Нууц үг</div>\r\n              <input type=\"text\" onChange={handlePassword} />\r\n            </div>\r\n            <div className=\"infos\">\r\n              <div className=\"infotxt\">Нууц үг дахин оруулна уу</div>\r\n              <input type=\"text\" onChange={handleConfirmPassword} />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button onClick={handleSignUp}>Sign up</button>\r\n          </div>\r\n          {/* <div>\r\n            <button className=\"signinbtn\">\r\n              <Link className=\"signinlink\" to={\"/signin\"}>\r\n                Нэвтрэх\r\n              </Link>\r\n            </button>\r\n          </div> */}\r\n      {/* <p className=\"forget\">Нууц үг сэргээх</p>\r\n          <h2>Status: {!status ? \"Failed\" : \"Success\"}</h2>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <Form\r\n            labelCol={{\r\n              span: 8,\r\n            }}\r\n            wrapperCol={{\r\n              span: 16,\r\n            }}\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n          >\r\n            <Form.Item\r\n              className=\"input-text\"\r\n              label=\"FullName\"\r\n              name=\"fullName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"*Please input your username!\",\r\n                },\r\n                {\r\n                  whitespace: true,\r\n                },\r\n                {\r\n                  min: 3,\r\n                },\r\n              ]}\r\n            >\r\n              <Input className=\"input\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              className=\"input-text\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"*Please input your username!\",\r\n                },\r\n                {\r\n                  whitespace: true,\r\n                },\r\n                {\r\n                  min: 3,\r\n                },\r\n              ]}\r\n            >\r\n              <Input type={\"email\"} className=\"input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              className=\"input-text\"\r\n              label=\"password\"\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input type={\"password\"} className=\"input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              className=\"input-text\"\r\n              label=\"Confirm-password\"\r\n              name=\"confirm-password\"\r\n              dependencies={[\"password\"]}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    } else {\r\n                      return Promise.reject(\"does not match\");\r\n                    }\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input type={\"password\"} className=\"input\" />\r\n            </Form.Item>\r\n            <div className=\"btn-container\">\r\n              <Form.Item\r\n                wrapperCol={{\r\n                  offset: 8,\r\n                  span: 16,\r\n                }}\r\n              >\r\n                <Button className=\"btn\" type=\"primary\" htmlType=\"submit\">\r\n                  Register\r\n                </Button>\r\n                <button onClick={signWithGoogle} className=\"google\">\r\n                  Google\r\n                </button>\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}